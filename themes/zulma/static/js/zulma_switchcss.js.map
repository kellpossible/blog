{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/zulma_switchcss.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","switch_css","THEME_KEY","STOP_BLINK_CSS_ID","STYLESHEET_CLASSNAME","previousLink","theme","localStorage","getItem","onLinkLoad","event","link","currentTarget","removeEventListener","onLinkError","removeStylesheets","className","showBody","removeItem","updateThemeSelect","id","remove","document","getElementsByTagName","appendChild","querySelectorAll","concat","changeTheme","themeName","firstLoad","fileref","createElement","rel","type","href","addEventListener","setItem","saveTheme","forEach","el","css","getElementById","setSelected","elements","length","element","selected","window","init","head","style","setAttribute","styleSheet","cssText","createTextNode","onchange","this"],"mappings":"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","file":"zulma_switchcss.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","(function(switch_css) {\r\n  //Constants\r\n  const THEME_KEY = \"ZULMA_THEME\";\r\n  const STOP_BLINK_CSS_ID = \"stop-blink\";\r\n  const STYLESHEET_CLASSNAME = \"stylesheet\";\r\n\r\n  //Variables\r\n  let previousLink = null;\r\n  let theme = localStorage.getItem(THEME_KEY);\r\n\r\n  //Events\r\n  /* The function called when the css has finished loading */\r\n  const onLinkLoad = event => {\r\n    //remove event listeners\r\n    let link = event.currentTarget;\r\n    link.removeEventListener(\"load\", onLinkLoad);\r\n    link.removeEventListener(\"error\", onLinkError);\r\n    //remove the previous stylesheet(s)\r\n    removeStylesheets();\r\n    //add stylesheet class\r\n    link.className += STYLESHEET_CLASSNAME;\r\n    //everything is good, so we don't need this\r\n    previousLink = null;\r\n    //make body visible again if it was hidden\r\n    showBody();\r\n  };\r\n\r\n  const onLinkError = event => {\r\n    //remove event listeners\r\n    let link = event.currentTarget;\r\n    link.removeEventListener(\"load\", onLinkLoad);\r\n    link.removeEventListener(\"error\", onLinkError);\r\n    //remove theme from localstorage\r\n    clearTheme();\r\n    //remove theme from dropdown list\r\n    updateThemeSelect(link.id, false);\r\n    //remove link from page\r\n    link.remove();\r\n    //re-add the previous stylesheet (if any)\r\n    if (previousLink) {\r\n      document.getElementsByTagName(\"head\")[0].appendChild(previousLink);\r\n    }\r\n    //set the theme select to the previous stylesheet\r\n    updateThemeSelect(\r\n      document.querySelectorAll(`.${STYLESHEET_CLASSNAME}`)[0].id,\r\n      true\r\n    );\r\n    //make body visible again if it was hidden\r\n    showBody();\r\n  };\r\n\r\n  //Private Methods\r\n  /* Called when the theme is changed */\r\n  function changeTheme(themeName, firstLoad) {\r\n    //create the css link element\r\n    var fileref = document.createElement(\"link\");\r\n    fileref.rel = \"stylesheet\";\r\n    fileref.type = \"text/css\";\r\n    fileref.href = `/${themeName}.css`;\r\n    fileref.id = themeName;\r\n\r\n    //append it to the head\r\n    let link = document.getElementsByTagName(\"head\")[0].appendChild(fileref);\r\n\r\n    //when it's loaded, call onLinkLoad\r\n    link.addEventListener(\"load\", onLinkLoad);\r\n    //if it errors, call onLinkError\r\n    link.addEventListener(\"error\", onLinkError);\r\n\r\n    //if this is the first load of the page, remove the current stylesheet early to avoid flash of wrongly styled content\r\n    if (firstLoad) {\r\n      //keep the old link in case something goes wrong\r\n      previousLink = document.querySelectorAll(`.${STYLESHEET_CLASSNAME}`)[0];\r\n      removeStylesheets();\r\n    }\r\n\r\n    saveTheme(themeName);\r\n  }\r\n\r\n  /* Removes all current stylesheets on the page */\r\n  function removeStylesheets() {\r\n    document.querySelectorAll(`.${STYLESHEET_CLASSNAME}`).forEach(el => {\r\n      el.remove();\r\n    });\r\n  }\r\n\r\n  /* Saves the current theme in localstorage */\r\n  function saveTheme(themeName) {\r\n    localStorage.setItem(THEME_KEY, themeName);\r\n  }\r\n\r\n  /* Clears the current theme in localstorage */\r\n  function clearTheme() {\r\n    localStorage.removeItem(THEME_KEY);\r\n  }\r\n\r\n  /* Hides the body of the page */\r\n  function hideBody() {\r\n    let head = document.getElementsByTagName(\"head\")[0];\r\n    let style = document.createElement(\"style\");\r\n    let css = \"body{visibility:hidden;}\";\r\n\r\n    style.id = STOP_BLINK_CSS_ID;\r\n    style.setAttribute(\"type\", \"text/css\");\r\n\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = css;\r\n    } else {\r\n      style.appendChild(document.createTextNode(css));\r\n    }\r\n    head.appendChild(style);\r\n  }\r\n\r\n  /* Shows the body of the page */\r\n  function showBody() {\r\n    let css = document.getElementById(STOP_BLINK_CSS_ID);\r\n    if (css) css.remove();\r\n  }\r\n\r\n  /* Either sets the theme selection to the given theme, or removes it from the list */\r\n  function updateThemeSelect(theme, setSelected) {\r\n    //get all select options\r\n    let elements = document.querySelectorAll(\"#theme-select>option\");\r\n    //if there are elements, the page is loaded and continue\r\n    if (elements.length) {\r\n      elements.forEach(element => {\r\n        if (element.value === theme) {\r\n          if (setSelected) {\r\n            element.selected = \"selected\";\r\n          } else {\r\n            element.remove();\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      //if there are no elements, the page is not yet loaded; wait for loaded event and try again.\r\n      window.addEventListener(\"DOMContentLoaded\", () => {\r\n        updateThemeSelect(theme, setSelected);\r\n      });\r\n    }\r\n  }\r\n\r\n  //Public Methods\r\n  switch_css.init = function() {\r\n    //if user has selected and theme and it is not the current theme\r\n    if (theme && !document.getElementById(theme)) {\r\n      //hide the body to stop FOUC\r\n      hideBody();\r\n      //change the theme\r\n      changeTheme(theme, true);\r\n      //when the DOM is loaded, change the select to their current choice\r\n      updateThemeSelect(theme, true);\r\n    }\r\n    //when the DOM is loaded, set the dropdown to trigger the theme change\r\n    window.addEventListener(\"DOMContentLoaded\", () => {\r\n      document.getElementById(\"theme-select\").onchange = function() {\r\n        changeTheme(this.value);\r\n      };\r\n    });\r\n  };\r\n})((switch_css = window.switch_css || {})); // eslint-disable-line\r\n\r\nswitch_css.init(); // eslint-disable-line\r\n"],"sourceRoot":""}